{"version":3,"sources":["firebase.js","components/Contactform.js","components/EditContactForm.js","components/SingleContact.js","components/Contacts.js","components/NavBar.js","components/About.js","components/Contactus.js","App.js","serviceWorker.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ContactForm","props","useState","fullName","mobile","email","address","type","values","setValues","handleInputChange","e","value","target","name","console","log","autoComplete","onSubmit","event","preventDefault","firestore","collection","add","document","getElementById","reset","id","className","placeholder","onChange","Form","Check","inline","checked","label","EditContactForm","doc","set","HideForm","onClick","SingleContact","show","setShow","delete","Contacts","companyInformation","Contactform","map","NavBar","Navbar","bg","expand","Brand","href","alt","src","width","height","Toggle","Collapse","Nav","Link","About","Contactus","classNameName","App","useFirebaseApp","setComapnyInformation","useEffect","a","db","onSnapshot","querySnapshot","data","docs","fetchData","path","Boolean","window","location","hostname","match","ReactDOM","render","firebaseConfig","fallback","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d14ec9ae.chunk.js","sourcesContent":["import * as firebase from \"firebase\"\n\n\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDJ2xbcP36ZG61ZM1DvPHpSh-MDGJQ5nsQ\",\n    authDomain: \"react-contact-3a23a.firebaseapp.com\",\n    databaseURL: \"https://react-contact-3a23a.firebaseio.com\",\n    projectId: \"react-contact-3a23a\",\n    storageBucket: \"react-contact-3a23a.appspot.com\",\n    messagingSenderId: \"267180670202\",\n    appId: \"1:267180670202:web:ed628d509b38eb3ca69d43\"\n};\nfirebase.initializeApp(firebaseConfig);\n// export const auth = firebase.auth();\nexport default firebase;\n","import React, {useState} from \"react\";\nimport firebase from \"../firebase\";\nimport Form from 'react-bootstrap/Form';\n\nconst ContactForm = (props) => {\n  let [values, setValues] = useState({\n    fullName: \"\",\n    mobile: \"\",\n    email: \"\",\n    address: \"\",\n    type: \"\",\n  });\n\n  let handleInputChange = (e) => {\n    const value = e.target.value;\n    setValues({ ...values, [e.target.name]: value });\n    console.log(values);\n    console.log(e.target.name);\n  };\n\n  let addData = () => {\n    const db = firebase.firestore();\n    db.collection(\"contacts\").add({\n      fullName: values.fullName,\n      mobile: values.mobile,\n      email: values.email,\n      address: values.address,\n      type: values.type,\n    });\n  };\n\n  let handleSubmit = (event) => {\n    event.preventDefault();\n    addData(values);\n    document.getElementById(\"form\").reset();\n    setValues(\"\");\n\n  };\n\n  return (\n    <form autoComplete=\"off\" onSubmit={handleSubmit} id=\"form\">\n      <div className=\"form-group input-group\">\n        <div className=\"input-group-prepend\">\n          <div className=\"input-group-text\">\n            <i className=\"fas fa-user \"></i>\n          </div>\n        </div>\n        <input\n          className=\"form-control\"\n          placeholder=\"Full Name\"\n          name=\"fullName\"\n          onChange={handleInputChange}\n          value={values.fullName}\n        />\n      </div>\n      <div className=\"form-group input-group\">\n        <div className=\"input-group-prepend\">\n          <div className=\"input-group-text\">\n            <i className=\"fas fa-mobile-alt\"></i>\n          </div>\n        </div>\n        <input\n          className=\"form-control\"\n          placeholder=\"Mobile Number\"\n          name=\"mobile\"\n          onChange={handleInputChange}\n          value={values.mobile}\n        />\n      </div>\n      <div className=\"form-group input-group\">\n        <div className=\"input-group-prepend\">\n          <div className=\"input-group-text\">\n            <i className=\"fas fa-envelope\"></i>\n          </div>\n        </div>\n        <input\n          className=\"form-control\"\n          placeholder=\"Email address\"\n          name=\"email\"\n          onChange={handleInputChange}\n          value={values.email}\n        />\n      </div>\n      <div className=\"mb-3 d-flex align-self-center border \">\n        <label className=\"m-3\"> Specify the contact's type:</label>\n        <Form.Check inline name=\"type\" value=\"Personal\" checked={values.type===\"Personal\"} onChange={handleInputChange} label=\"Personal\" type=\"radio\" id=\"Personal\"/>\n        <Form.Check inline name=\"type\" value=\"Company\" checked={values.type===\"Company\"} onChange={handleInputChange} label=\"Company\" type=\"radio\" id=\"Company\" />\n      </div>\n \n\n      <div className=\"form-group input-group\">\n        {/* change the hieght */}\n        <input\n          className=\"form-control\"\n          placeholder=\"Address\"\n          name=\"address\"\n          onChange={handleInputChange}\n          value={values.address}\n        />\n      </div>\n      <div className=\"form-group\">\n        <input\n          type=\"submit\"\n          value=\"Add New Contact\"\n          className=\"btn btn-outline-success btn-block\"\n        ></input>\n      </div>\n    </form>\n  );\n};\nexport default ContactForm;\n","import React, { useState } from \"react\";\nimport firebase from \"../firebase\";\nimport Form from \"react-bootstrap/Form\";\nimport Modal from 'react-bootstrap/Modal'\nimport { propTypes } from \"react-bootstrap/esm/Image\";\nconst EditContactForm = (props) => {\n  let [values, setValues] = useState(props);\n  console.log(props);\n  let handleInputChange = (e) => {\n    const value = e.target.value;\n    setValues({ ...values, [e.target.name]: value });\n    console.log(values);\n    console.log(e.target.name);\n  };\n\n  let EditData = () => {\n    const db = firebase.firestore();\n    db.collection(\"contacts\").doc(props.id).set({\n      fullName: values.fullName,\n      mobile: values.mobile,\n      email: values.email,\n      address: values.address,\n      type: values.type,\n    });\n    props.HideForm();\n  };\n\n  let handleSubmit = (event) => {\n    event.preventDefault();\n    EditData(values);\n    setValues(\"\");\n  };\n\n  return (\n    <form autoComplete=\"off\" onSubmit={handleSubmit}>\n      <div className=\"form-group input-group\">\n        <div className=\"input-group-prepend\">\n          <div className=\"input-group-text\">\n            <i className=\"fas fa-user\"></i>\n          </div>\n        </div>\n        <input\n          className=\"form-control\"\n          placeholder=\"Full Name\"\n          name=\"fullName\"\n          onChange={handleInputChange}\n          value={values.fullName}\n        />\n      </div>\n      <div className=\"form-group input-group\">\n        <div className=\"input-group-prepend\">\n          <div className=\"input-group-text\">\n            <i className=\"fas fa-mobile-alt\"></i>\n          </div>\n        </div>\n        <input\n          className=\"form-control\"\n          placeholder=\"Mobile Number\"\n          name=\"mobile\"\n          onChange={handleInputChange}\n          value={values.mobile}\n        />\n      </div>\n      <div className=\"form-group input-group\">\n        <div className=\"input-group-prepend\">\n          <div className=\"input-group-text\">\n            <i className=\"fas fa-envelope\"></i>\n          </div>\n        </div>\n        <input\n          className=\"form-control\"\n          placeholder=\"Email address\"\n          name=\"email\"\n          onChange={handleInputChange}\n          value={values.email}\n        />\n      </div>\n      <div className=\"mb-3 d-flex align-self-center\">\n        <label className=\"m-3\"> Specify the contact's type:</label>\n        <Form.Check\n          inline\n          name=\"type\"\n          value=\"Personal\"\n          checked={values.type === \"Personal\"}\n          onChange={handleInputChange}\n          label=\"Personal\"\n          type=\"radio\"\n          id=\"Personal\"\n        />\n        <Form.Check\n          inline\n          name=\"type\"\n          value=\"Company\"\n          checked={values.type === \"Company\"}\n          onChange={handleInputChange}\n          label=\"Company\"\n          type=\"radio\"\n          id=\"Company\"\n        />\n      </div>\n\n      <div className=\"form-group input-group\">\n        <textarea\n          className=\"form-control\"\n          placeholder=\"Address\"\n          name=\"address\"\n          onChange={handleInputChange}\n          value={values.address}\n        />\n      </div>\n      <div className=\"row\">\n      <div className=\" col-6 form-group\">\n        <input\n          type=\"submit\"\n          value=\"Edit\"\n          className=\"btn btn-outline-success btn-block\"\n        ></input>\n      </div>\n      <div className=\"col-6 form-group\">\n          <button\n            onClick={() => props.HideForm()}\n            className=\"btn btn-outline-danger btn-block\"\n          >\n            Cancel\n          </button>\n        </div>\n        </div>\n    </form>\n  );\n};\nexport default EditContactForm;\n\n","import React, { useState } from \"react\";\nimport firebase from \"../firebase\";\nimport EditContactForm from \"./EditContactForm\"\nconst SingleContact = (props) => {\n  const [show, setShow] = useState(false);\n\n  const editButton = () => {\n    setShow(true);\n  }\n  const HideForm=()=>{\n    setShow(false);\n\n  }\n  const onDelete = () => {\n    const db = firebase.firestore();\n    db.collection(\"contacts\").doc(props.id).delete();\n  };\n\n  // console.log(props.id);\n  return (\n    // <h1>I am here</h1>\n\n    <tbody>\n      <tr>\n        <td>{props.fullName}</td>\n        <td>{props.mobile}</td>\n        <td>{props.email}</td>\n        <td>{props.type}</td>\n        <td className=\"bg-light\">\n        {show && <EditContactForm {...props} HideForm={HideForm}/>}\n          <i\n            className=\"btn text-primary\"\n            onClick={() => {\n              editButton(props);\n            }}\n          >\n            <i className=\"fas fa-pencil-alt\"></i>\n          </i>\n          <i\n            className=\"btn text-danger\"\n            onClick={() => {\n              onDelete(props);\n            }}\n          >\n            <i className=\"far fa-trash-alt\"></i>\n          </i>\n        </td>\n      </tr>\n    </tbody>\n  );\n};\n\nexport default SingleContact;\n","import React from \"react\";\nimport Contactform from \"./Contactform\";\nimport SingleContact from \"./SingleContact\";\n\nconst Contacts = ({ companyInformation }) => {\n  return (\n    <>\n      <div className=\"jumbotron jumbotron-fluid\">\n        <div className=\"container\">\n          <h1 className=\"display-4 text-center text-success\"> Contacts Register</h1>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-md-5\">\n          <Contactform />\n        </div>\n        <div className=\"col-md-7\">\n          <table className=\"table table-stripped\">\n            <thead className=\"thead-light\">\n              <tr>\n                <th>Full Name</th>\n                <th>Mobile</th>\n                <th>Email</th>\n                <th>Type</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            {companyInformation.map((doc) => (\n              <SingleContact {...doc} />\n            ))}\n          </table>\n        </div>\n      </div>\n    </>\n  );\n};\nexport default Contacts;\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\n\nconst NavBar = () => {\n  return  <>\n  <Navbar bg=\"light\" expand=\"lg\">\n  <Navbar.Brand href=\"#home\">\n          <img\n            alt=\"logo\"\n            src=\"https://previews.123rf.com/images/togrulbabayev/togrulbabayev1602/togrulbabayev160200077/54145838-contacts-icon-for-web-and-ui.jpg\"\n            width=\"32   \"\n            height=\"32\"\n            className=\"d-inline-block align-top\"\n          />{\" \"}\n           Register\n        </Navbar.Brand>    <Navbar.Toggle />\n    <Navbar.Collapse>\n      <Nav className=\"mr-auto\">\n        <Nav.Link href=\"/\">Home</Nav.Link>\n        <Nav.Link href=\"/about\">About</Nav.Link>\n        <Nav.Link href=\"/contact\">Contact us</Nav.Link>\n      </Nav>\n        <Nav.Link inline href=\"#logout\">Logout</Nav.Link>\n    </Navbar.Collapse>\n  </Navbar>\n</>\n\n\n};\n\nexport default NavBar;\n\n\n\n","import React from \"react\";\n\nconst About = () => {\n  return (\n  <div>\n    <h2>About</h2>\n  </div>\n  );\n};\n\nexport default About;\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst Contactus = () => {\n  return (\n    <>\n      <div className=\"col-md-12\">\n        <h2 className=\"h1-responsive font-weight-bold text-center my-5\">\n          Contact us\n        </h2>\n        <p className=\"text-center w-responsive mx-auto mb-2\">\n          Do you have any questions? Please do not hesitate to contact us\n          directly.\n        </p>\n        <p className=\"text-center w-responsive mb-5\">\n          Our team will come back to you within a matter of hours to help you.\n        </p>    \n      </div>\n      <div classNameName=\"row \">\n        <div className=\"col-md-12 text-center\">\n          <ul className=\"list-unstyled mb-0\">\n            <li>\n              <i className=\"fas fa-map-marker-alt fa-2x\"></i>\n              <p>Istanbul, 34000, Turkey</p>\n            </li>\n\n            <li>\n              <i className=\"fas fa-phone mt-4 fa-2x\"></i>\n              <p>+90 534 616 4224</p>\n            </li>\n\n            <li>\n              <i className=\"fas fa-envelope mt-4 fa-2x\"></i>\n              <p>ahmad.galmod@gmail.com</p>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Contactus;\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Contacts from \"./components/Contacts\";\nimport NavBar from \"./components/NavBar\";\nimport About from \"./components/About\";\nimport Contactus from \"./components/Contactus\";\nimport \"firebase/auth\";\nimport { useFirebaseApp } from \"reactfire\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport SigningIn from \"./components/SigningIn\"\n\nfunction App() {\n  const firebase = useFirebaseApp();\n  const [companyInformation, setComapnyInformation] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const db = firebase.firestore();\n      await db.collection(\"contacts\").onSnapshot(function (querySnapshot) {\n        const data = querySnapshot.docs.map(function (doc) {\n          const id = doc.id;\n          const data = doc.data();\n          return {\n            id,\n            ...data,\n          };\n        });\n        setComapnyInformation(data);\n      });\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <>\n    {/* <SigningIn> */}\n      <Router>\n        <NavBar />\n        <Switch>\n          <Route path=\"/about\">\n            {\" \"}\n            <About />\n          </Route>\n          <Route path=\"/contact\">\n            <Contactus />\n          </Route>\n          <Route path=\"/\">\n            <div className=\"col-md-8 offset-md-2\">\n              <Contacts companyInformation={companyInformation} />\n            </div>{\" \"}\n          </Route>\n        </Switch>\n      </Router>\n      {/* </SigningIn> */}\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, {Suspense}from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { FirebaseAppProvider } from 'reactfire';\nimport firebase from './firebase';\n\nReactDOM.render(\n  <FirebaseAppProvider firebaseConfig={firebase}>\n    <Suspense fallback={<h3>Loading...</h3>}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  </Suspense>\n  </FirebaseAppProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}